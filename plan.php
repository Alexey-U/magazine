<?php

/*

1. Определяем базу данных в env.

2. Переносим шаблоны в views.

3. Переносим css js файлы в public.

4. Прописываем пути ко всем стилям (asset(''))

5. Разбиваем шаблон(index) на 3 части:

	@section('header')
	@section('content')
	@section('footer')

6. В остальных страницах наследуем главный шаблон (@extends('layouts.index')) и переопределяем только
@section('content').



7. Теперь в шаблоне начнем изменять левую секцию категорий.

8. Создаем миграцию(categories) с молелью(Category).

	   		$table->string('name', 100);
            $table->integer('sort_order');
            $table->integer('status');


9. Нужно передать в вид категории товаров, для всех страниц с этим названием.

	- Подключаем модель к контроллеру
	- Делаем запрос (выборку по убыванию)
	- передаем объект в вид


10. Создать модель с миграциями Product(где будут содердаться все данные о товарах)


11. Добавить инф. из модели Product в ячейки на шаблоне.


12. Написание обработчиков для категорий(id).


Получить данные из бд на основе статуса и номера id.



- CatalogController

	getShirts($id)  - возможно даже массив c id.

	
	$product = Product::find(); - на основании категории_id

	return view('product-details', ['product' => $product], 'title' => 'Товар');


- формируем ссылку каталог товаров

- прописываем роут
- создаем контроллер (CatalogController)
- метод для обработки (выборки на основании category_id из Product)


- теперь эти товары нужно высветить на отдельной странице (Каталог товаров)

- при нажатии на категорию будет высвечиваться товары этой категории (расположенные в category_id product)
-----------------------------------------------------------------------------------------------------------


	Передача инф о товаре в product-details.

- 

----------------------------------------------------------------------------------------------------

- CartController

- addToCart($id)

- Route::get('/cart/add/{id}')


public function addToCart($id)

$arrayProducts = []; - сюда будут добавлятся id -товара и его количество 

array_push($id, ++);



Подсчет товаров в карзине (должен отображаться возле иконки корзина)




1. Пользователь нажимает на иконку "корзина" у товара. В корзине он может увеличивать кол-во товаров одной модели.

	- создать ссылку для корзины.
	- создать шаблон корзины.
	


2. Потом переходить в корзину, и там смотрит список товаров.

if(array_key_exists($id, $cartId)) {
	$cartId[$id] ++;
} else {
	$cartId[$id] = 1;
}

array_sum - для подсчета количества товаров в массиве.





3. Там высвечивается количество товаров, стоимость одного товара, название, id, и самое главное
это общая стоимость(сумма).


4. Там он может удалить товар если он ему не нужен.


delete function ($array, $id)
{
	foreach($array as $key => $value) {
		
	}
}
-----------------------------------------------------------------------------------------------------

1. Создать миграцию Order (id, name, user_id, total_sum, message, order_items, telephone).


















______________________________________________________________________________________________________

Что еще нужно сделать:

- Возможно лучше передавать все переменные через один метод для всех страниц.



- Сделать подсветку для кнопок (active) для категорий.
- Наполнить контентом (product)

*/